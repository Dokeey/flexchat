{"version":3,"sources":["assets/flexchatlogo.png","utils/useLocalStorage.js","store.js","Constants.js","api.js","pages/home.js","utils/Unload.js","pages/index.js","index.js"],"names":["module","exports","getStorageItem","key","initialValue","item","window","localStorage","getItem","JSON","parse","error","console","log","setStorageItem","value","setItem","stringify","AppContext","createContext","reducer","prevState","action","type","SET_TOKEN","jwtToken","payload","pk","newState","UpdateWithSideEffect","state","dispatch","DELETE_TOKEN","SET_GROUP","group","Update","DELETE_GROUP","SET_TOTALUSER","total_user","SET_ISMATCH","is_match","SET_ISLOGIN","is_login","AppProvider","children","useReducerWithSideEffects","is_loing","store","Provider","useAppContext","useContext","API_HOST","process","Axios","create","baseURL","Home","Unload","props","handler","handlerRef","useLatest","useEffect","handleUnload","event","returnValue","current","defaultPrevented","addEventListener","removeEventListener","useUnload","onUnload","defaultProps","propTypes","PropTypes","any","func","isRequired","Root","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.599e4bb9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flexchatlogo.ad21ba20.png\";","import { useState } from \"react\";\n\nexport function getStorageItem(key, initialValue) {\n  try {\n    // Get from local storage by key\n    const item = window.localStorage.getItem(key);\n    // Parse stored json or if none return initialValue\n    return item ? JSON.parse(item) : initialValue;\n  } catch (error) {\n    // If error also return initialValue\n    console.log(error);\n    return initialValue;\n  }\n}\nexport function setStorageItem(key, value) {\n  try {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// Hook\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    return getStorageItem(key, initialValue);\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n    // Allow value to be a function so we have same API as useState\n    const valueToStore = value instanceof Function ? value(storedValue) : value;\n    // Save state\n    setStoredValue(valueToStore);\n    setStorageItem(key, valueToStore);\n  };\n\n  return [storedValue, setValue];\n}\n","import React, { createContext, useContext } from \"react\";\nimport useReducerWithSideEffects, {\n  UpdateWithSideEffect,\n  Update,\n} from \"use-reducer-with-side-effects\";\nimport { getStorageItem, setStorageItem } from \"utils/useLocalStorage\";\n\nconst AppContext = createContext();\n\nconst reducer = (prevState, action) => {\n  const { type } = action;\n  if (type === SET_TOKEN) {\n    const { payload: jwtToken, pk } = action;\n    const newState = { ...prevState, jwtToken, pk };\n    return UpdateWithSideEffect(newState, (state, dispatch) => {\n      setStorageItem(\"jwtToken\", jwtToken);\n    });\n  } else if (type === DELETE_TOKEN) {\n    const newState = { ...prevState, jwtToken: \"\" };\n    return UpdateWithSideEffect(newState, (state, dispatch) => {\n      setStorageItem(\"jwtToken\", \"\");\n    });\n  } else if (type === SET_GROUP) {\n    const { payload: group } = action;\n    const newState = { ...prevState, group };\n    return Update(newState);\n  } else if (type === DELETE_GROUP) {\n    const newState = { ...prevState, group: \"\" };\n    return Update(newState);\n  } else if (type === SET_TOTALUSER) {\n    const { payload: total_user } = action;\n    const newState = { ...prevState, total_user };\n    return Update(newState);\n  } else if (type === SET_ISMATCH) {\n    const { payload: is_match } = action;\n    const newState = { ...prevState, is_match };\n    return Update(newState);\n  } else if (type === SET_ISLOGIN) {\n    const { payload: is_login } = action;\n    const newState = { ...prevState, is_login };\n    return Update(newState);\n  }\n\n  return prevState;\n};\n\nexport const AppProvider = ({ children }) => {\n  const jwtToken = getStorageItem(\"jwtToken\", \"\");\n  const [store, dispatch] = useReducerWithSideEffects(reducer, {\n    jwtToken,\n    pk: -1,\n    group: \"\",\n    total_user: \"Loading...\",\n    is_match: false,\n    is_loing: false,\n  });\n  return (\n    <AppContext.Provider value={{ store, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppContext = () => useContext(AppContext);\n\n// Actions\nconst SET_TOKEN = \"APP/SET_TOKEN\";\nconst DELETE_TOKEN = \"APP/DELETE_TOKEN\";\nconst SET_GROUP = \"APP/SET_GROUP\";\nconst DELETE_GROUP = \"APP/DELETE_GROUP\";\nconst SET_TOTALUSER = \"APP/SET_TOTALUSER\";\nconst SET_ISMATCH = \"APP/SET_ISMATCH\";\nconst SET_ISLOGIN = \"APP/SET_ISLOGIN\";\n\n// Action Creators\nexport const setToken = (token, pk) => ({\n  type: SET_TOKEN,\n  payload: token,\n  pk,\n});\nexport const deleteToken = () => ({ type: DELETE_TOKEN });\n\nexport const setGroup = (group) => ({\n  type: SET_GROUP,\n  payload: group,\n});\n\nexport const deleteGroup = () => ({ type: DELETE_GROUP });\n\nexport const setTotalUser = (total_user) => ({\n  type: SET_TOTALUSER,\n  payload: total_user,\n});\n\nexport const setIsMatch = (is_match) => ({\n  type: SET_ISMATCH,\n  payload: is_match,\n});\n\nexport const setIsLogin = (is_loing) => ({\n  type: SET_ISLOGIN,\n  payload: is_loing,\n});\n","export const API_HOST = process.env.REACT_APP_API_HOST || \"http://localhost\";\n","import Axios from \"axios\";\nimport { API_HOST } from \"Constants\";\n\nexport const axiosInstance = Axios.create({\n  baseURL: API_HOST,\n});\n","import React, { useState, useEffect } from \"react\";\nimport { Chat } from \"components/chat\";\nimport { UserCount } from \"components/userCount\";\nimport { AppLayout } from \"components/appLayout\";\nimport { useAppContext } from \"store\";\nimport { ChatStop } from \"components/chatStop\";\nimport { UserInfo } from \"components/userInfo\";\n\nfunction Home() {\n  const {\n    store: { jwtToken, group },\n  } = useAppContext();\n\n  const [chatSocket, setChatSocket] = useState({});\n  useEffect(() => {\n    if (jwtToken && group) {\n      const ws = new WebSocket(\n        `wss://dry-dawn-35150.herokuapp.com/ws/chat/?token=${jwtToken}`\n      );\n      setChatSocket(ws);\n    }\n  }, [jwtToken, group]);\n\n  const right_sidebar = (\n    <>\n      <UserCount />\n      <ChatStop chatSocket={chatSocket} />\n    </>\n  );\n\n  return (\n    <div>\n      <AppLayout right_sidebar={right_sidebar} user_info={<UserInfo />}>\n        <Chat chatSocket={chatSocket} setChatSocket={setChatSocket} />\n      </AppLayout>\n    </div>\n  );\n}\n\nexport default Home;\n","import PropTypes from \"prop-types\";\nimport { useEffect } from \"react\";\nimport useLatest from \"use-latest\";\n\nvar useUnload = function useUnload(handler) {\n  if (handler === void 0) {\n    handler = function handler() {};\n  }\n\n  if (process.env.NODE_ENV !== \"production\" && typeof handler !== \"function\") {\n    throw new TypeError(\n      'Expected \"handler\" to be a function, not ' + typeof handler + \".\"\n    );\n  }\n\n  var handlerRef = useLatest(handler);\n  useEffect(function () {\n    var handleUnload = function handleUnload(event) {\n      var returnValue = handlerRef.current(event); // Chrome requires `returnValue` to be set.\n\n      if (event.defaultPrevented) {\n        event.returnValue = \"\";\n      }\n\n      if (typeof returnValue === \"string\") {\n        event.returnValue = returnValue;\n        return returnValue;\n      }\n    };\n\n    window.addEventListener(\"unload\", handleUnload);\n    return function () {\n      window.removeEventListener(\"unload\", handleUnload);\n    };\n  }, []);\n};\n\nvar Unload = function Unload(props) {\n  useUnload(props.onUnload);\n  return props.children;\n};\n\nUnload.defaultProps = {\n  children: null,\n};\nUnload.propTypes = {\n  children: PropTypes.any,\n  onUnload: PropTypes.func.isRequired,\n};\n\nexport { Unload, useUnload };\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Home from \"./home\";\n// import { Beforeunload } from \"react-beforeunload\";\nimport { useAppContext, deleteToken, deleteGroup } from \"store\";\nimport { API_HOST } from \"Constants\";\nimport { Unload } from \"utils/Unload\";\n\nfunction Root() {\n  const {\n    store: { pk },\n    dispatch,\n  } = useAppContext();\n\n  const userDelete = () => {\n    dispatch(deleteToken());\n    dispatch(deleteGroup());\n    // const HOST = \"http://localhost\";\n    const HOST = API_HOST;\n    try {\n      navigator.sendBeacon(`${HOST}/accounts/delete/${pk}/`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // useEffect(() => {\n  //   const userDel = () => userDelete();\n  //   window.addEventListener(\"unload\", userDel);\n  //   window.addEventListener(\"beforeunload\", userDel);\n  //   window.addEventListener(\"pagehide\", userDel);\n  //   return () => {\n  //     window.removeEventListener(\"unload\", userDel);\n  //     window.removeEventListener(\"beforeunload\", userDel);\n  //     window.removeEventListener(\"pagehide\", userDel);\n  //   };\n  // });\n\n  return (\n    // <Beforeunload onBeforeunload={() => userDelete()}>\n    <Unload onUnload={() => userDelete()}>\n      <Route path=\"/\" component={Home} />\n    </Unload>\n    // </Beforeunload>\n  );\n}\n\nexport default Root;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppProvider } from \"store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Root from \"pages\";\nimport \"antd/dist/antd.css\";\nimport \"main.css\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <AppProvider>\n      <Root />\n    </AppProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}