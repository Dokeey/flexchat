{"version":3,"sources":["assets/flexchatlogo.png","utils/useLocalStorage.js","store.js","api.js","Constants.js","components/chatStart.js","utils/useInterval.js","components/chat.js","components/userCount.js","components/appLayout.js","components/chatStop.js","components/userInfo.js","pages/home.js","pages/index.js","index.js"],"names":["module","exports","getStorageItem","key","initialValue","item","window","localStorage","getItem","JSON","parse","error","console","log","setStorageItem","value","setItem","stringify","AppContext","createContext","reducer","prevState","action","type","SET_TOKEN","jwtToken","payload","pk","newState","UpdateWithSideEffect","state","dispatch","DELETE_TOKEN","SET_GROUP","group","Update","DELETE_GROUP","SET_TOTALUSER","total_user","SET_ISMATCH","is_match","SET_ISLOGIN","is_login","AppProvider","children","useReducerWithSideEffects","is_loing","store","Provider","useAppContext","useContext","deleteGroup","setTotalUser","setIsMatch","setIsLogin","axiosInstance","Axios","create","baseURL","process","ChatStart","chatClose","setWaiters","headers","Authorization","startMatching","a","get","response","data","notification","open","message","description","icon","SmileOutlined","style","color","shape","onClick","size","border","CommentOutlined","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","Chat","chatSocket","setChatSocket","useState","setMessage","setKey","waiters","messagesEndRef","ref","chatlog","setChatlog","response2","all","then","spread","count","waiters_count","catch","onmessage","e","pop","push","className","gender","ManOutlined","marginLeft","backgroundColor","WomanOutlined","prevValue","onclose","CloseCircleOutlined","scrollIntoView","behavior","tip","indicator","LoadingOutlined","fontSize","spin","close","placeholder","enterButton","SendOutlined","prefix","MessageTwoTone","disabled","allowClear","maxLength","onChange","target","onSearch","send","UserCount","title","textAlign","bordered","AppLayout","right_sidebar","user_info","src","Logo","alt","ChatStop","danger","block","StopOutlined","marginTop","UserInfo","signal","want_match","userInfo","setUserInfo","visible","setVisible","loading","setLoading","userSubmit","put","onDrawerClose","post","token","CheckCircleOutlined","showDrawer","SettingFilled","SettingOutlined","maskStyle","placement","closable","onClose","boxShadow","marginBottom","h1","fontWeight","Group","prev","buttonStyle","margin","borderRadius","Button","Radio_Button","TeamOutlined","borderTop","Home","ws","WebSocket","Root","userDelete","navigator","sendBeacon","onBeforeunload","path","component","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.d4181208.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flexchatlogo.ad21ba20.png\";","import { useState } from \"react\";\n\nexport function getStorageItem(key, initialValue) {\n  try {\n    // Get from local storage by key\n    const item = window.localStorage.getItem(key);\n    // Parse stored json or if none return initialValue\n    return item ? JSON.parse(item) : initialValue;\n  } catch (error) {\n    // If error also return initialValue\n    console.log(error);\n    return initialValue;\n  }\n}\nexport function setStorageItem(key, value) {\n  try {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// Hook\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    return getStorageItem(key, initialValue);\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n    // Allow value to be a function so we have same API as useState\n    const valueToStore = value instanceof Function ? value(storedValue) : value;\n    // Save state\n    setStoredValue(valueToStore);\n    setStorageItem(key, valueToStore);\n  };\n\n  return [storedValue, setValue];\n}\n","import React, { createContext, useContext } from \"react\";\nimport useReducerWithSideEffects, {\n  UpdateWithSideEffect,\n  Update,\n} from \"use-reducer-with-side-effects\";\nimport { getStorageItem, setStorageItem } from \"utils/useLocalStorage\";\n\nconst AppContext = createContext();\n\nconst reducer = (prevState, action) => {\n  const { type } = action;\n  if (type === SET_TOKEN) {\n    const { payload: jwtToken, pk } = action;\n    const newState = { ...prevState, jwtToken, pk };\n    return UpdateWithSideEffect(newState, (state, dispatch) => {\n      setStorageItem(\"jwtToken\", jwtToken);\n    });\n  } else if (type === DELETE_TOKEN) {\n    const newState = { ...prevState, jwtToken: \"\" };\n    return UpdateWithSideEffect(newState, (state, dispatch) => {\n      setStorageItem(\"jwtToken\", \"\");\n    });\n  } else if (type === SET_GROUP) {\n    const { payload: group } = action;\n    const newState = { ...prevState, group };\n    return Update(newState);\n  } else if (type === DELETE_GROUP) {\n    const newState = { ...prevState, group: \"\" };\n    return Update(newState);\n  } else if (type === SET_TOTALUSER) {\n    const { payload: total_user } = action;\n    const newState = { ...prevState, total_user };\n    return Update(newState);\n  } else if (type === SET_ISMATCH) {\n    const { payload: is_match } = action;\n    const newState = { ...prevState, is_match };\n    return Update(newState);\n  } else if (type === SET_ISLOGIN) {\n    const { payload: is_login } = action;\n    const newState = { ...prevState, is_login };\n    return Update(newState);\n  }\n\n  return prevState;\n};\n\nexport const AppProvider = ({ children }) => {\n  const jwtToken = getStorageItem(\"jwtToken\", \"\");\n  const [store, dispatch] = useReducerWithSideEffects(reducer, {\n    jwtToken,\n    pk: -1,\n    group: \"\",\n    total_user: \"Loading...\",\n    is_match: false,\n    is_loing: false,\n  });\n  return (\n    <AppContext.Provider value={{ store, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppContext = () => useContext(AppContext);\n\n// Actions\nconst SET_TOKEN = \"APP/SET_TOKEN\";\nconst DELETE_TOKEN = \"APP/DELETE_TOKEN\";\nconst SET_GROUP = \"APP/SET_GROUP\";\nconst DELETE_GROUP = \"APP/DELETE_GROUP\";\nconst SET_TOTALUSER = \"APP/SET_TOTALUSER\";\nconst SET_ISMATCH = \"APP/SET_ISMATCH\";\nconst SET_ISLOGIN = \"APP/SET_ISLOGIN\";\n\n// Action Creators\nexport const setToken = (token, pk) => ({\n  type: SET_TOKEN,\n  payload: token,\n  pk,\n});\nexport const deleteToken = () => ({ type: DELETE_TOKEN });\n\nexport const setGroup = (group) => ({\n  type: SET_GROUP,\n  payload: group,\n});\n\nexport const deleteGroup = () => ({ type: DELETE_GROUP });\n\nexport const setTotalUser = (total_user) => ({\n  type: SET_TOTALUSER,\n  payload: total_user,\n});\n\nexport const setIsMatch = (is_match) => ({\n  type: SET_ISMATCH,\n  payload: is_match,\n});\n\nexport const setIsLogin = (is_loing) => ({\n  type: SET_ISLOGIN,\n  payload: is_loing,\n});\n","import Axios from \"axios\";\nimport { API_HOST } from \"Constants\";\n\nexport const axiosInstance = Axios.create({\n  baseURL: API_HOST,\n});\n","export const API_HOST = process.env.REACT_APP_API_HOST || \"http://localhost\";\n","import React from \"react\";\nimport { Button, notification } from \"antd\";\nimport { setGroup, useAppContext } from \"store\";\nimport { setIsLogin } from \"store\";\nimport { CommentOutlined, SmileOutlined } from \"@ant-design/icons\";\nimport { setIsMatch } from \"store\";\nimport { axiosInstance } from \"api\";\n\nexport function ChatStart({ chatClose, setWaiters }) {\n  const {\n    store: { pk, jwtToken, is_match },\n    dispatch,\n  } = useAppContext();\n  const headers = { Authorization: `JWT ${jwtToken}` };\n\n  const startMatching = async () => {\n    chatClose();\n    if (!jwtToken) {\n      dispatch(setIsLogin(false));\n      return null;\n    }\n    dispatch(setIsMatch(true));\n    try {\n      console.log(is_match);\n      const response = await axiosInstance.get(`/chat/match/${pk}/`, {\n        headers,\n      });\n      dispatch(setGroup(response.data.group));\n      setWaiters(0);\n\n      notification.open({\n        message: \"상대방과 연결되었습니다.\",\n        description: \"인사를 건네보세요 :)\",\n        icon: <SmileOutlined style={{ color: \"#43d5d2\" }} />,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <Button\n        type=\"primary\"\n        shape=\"round\"\n        onClick={startMatching}\n        size=\"large\"\n        style={{ border: \"2px solid white\" }}\n      >\n        <CommentOutlined />\n        &nbsp;채팅시작\n      </Button>\n    </div>\n  );\n}\n","import { useRef, useEffect } from \"react\";\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [callback, delay]);\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useAppContext, deleteGroup } from \"store\";\nimport { ChatStart } from \"./chatStart\";\nimport Search from \"antd/lib/input/Search\";\nimport {\n  SendOutlined,\n  MessageTwoTone,\n  WomanOutlined,\n  ManOutlined,\n  LoadingOutlined,\n  CloseCircleOutlined,\n} from \"@ant-design/icons\";\nimport { Avatar, Spin, notification } from \"antd\";\nimport \"./chat.scss\";\nimport { useInterval } from \"utils/useInterval\";\nimport { setTotalUser } from \"store\";\nimport Axios from \"axios\";\nimport { setIsMatch } from \"store\";\nimport { axiosInstance } from \"api\";\n\nexport function Chat({ chatSocket, setChatSocket }) {\n  const {\n    store: { group, pk, jwtToken, is_match },\n    dispatch,\n  } = useAppContext();\n  const [message, setMessage] = useState(\"\");\n  const [key, setKey] = useState(1);\n  const [waiters, setWaiters] = useState(0);\n  const messagesEndRef = useRef(null);\n  const [chatlog, setChatlog] = useState([\n    <div key=\"0\" ref={messagesEndRef}></div>,\n  ]);\n\n  const headers = { Authorization: `JWT ${jwtToken}` };\n\n  const get_waiters_counter = () => {\n    if (jwtToken && is_match && !group) {\n      try {\n        const response = axiosInstance.get(\"/chat/users_count/\");\n        const response2 = axiosInstance.get(`/chat/group/${pk}/`, {\n          headers,\n        });\n        Axios.all([response, response2])\n          .then(\n            Axios.spread((...responses) => {\n              const response = responses[0];\n              const response2 = responses[1];\n              console.log(\"response : \", response.data);\n              console.log(\"response2 : \", response2.data);\n              dispatch(setTotalUser(response.data.count));\n              setWaiters(response2.data.waiters_count);\n            })\n          )\n          .catch((error) => {\n            console.error(error);\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  useInterval(get_waiters_counter, 5000);\n\n  chatSocket.onmessage = function (e) {\n    const data = JSON.parse(e.data);\n    if (pk === data.pk) {\n      const ref = chatlog.pop();\n      chatlog.push(\n        <div key={key} className=\"bubble\">\n          {data.message}\n        </div>\n      );\n      chatlog.push(ref);\n      setChatlog(chatlog);\n    } else {\n      const ref = chatlog.pop();\n      if (data.gender === \"M\") {\n        chatlog.push(\n          <div key={key} className=\"another\">\n            <div className=\"another-user\">\n              <Avatar\n                icon={<ManOutlined />}\n                style={{ marginLeft: \"10px\", backgroundColor: \"skyblue\" }}\n              />\n              <div className=\"another-bubble\">{data.message}</div>\n            </div>\n          </div>\n        );\n      } else {\n        chatlog.push(\n          <div key={key} className=\"another\">\n            <div className=\"another-user\">\n              <Avatar\n                icon={<WomanOutlined />}\n                style={{ marginLeft: \"10px\", backgroundColor: \"hotpink\" }}\n              />\n              <div className=\"another-bubble\">{data.message}</div>\n            </div>\n          </div>\n        );\n      }\n      chatlog.push(ref);\n      setChatlog(chatlog);\n    }\n    setKey((prevValue) => prevValue + 1);\n  };\n\n  chatSocket.onclose = function (e) {\n    setChatlog([<div key=\"0\" ref={messagesEndRef}></div>]);\n    dispatch(deleteGroup());\n    setChatSocket({});\n    dispatch(setIsMatch(false));\n    // console.error(e, \"클로즈 됐습니다.\");\n    notification.open({\n      message: \"채팅이 종료되었습니다.\",\n      description: \"새로운 채팅을 시작하세요\",\n      icon: <CloseCircleOutlined style={{ color: \"red\" }} />,\n    });\n  };\n\n  const chatclose = () => {\n    if (chatSocket.close) {\n      chatSocket.close();\n    } else {\n      return null;\n    }\n  };\n\n  const chat_submit = () => {\n    if (!message) {\n      return null;\n    }\n    chatSocket.send(\n      JSON.stringify({\n        message,\n      })\n    );\n    setMessage(\"\");\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\",\n    });\n  };\n\n  useEffect(scrollToBottom, [key]);\n\n  // const [maxHeight, setMaxHeight] = useState(\"100vh\");\n\n  // useEffect(() => {\n  //   setMaxHeight(document.querySelector(\"#chat_log_window\").offsetHeight);\n  // }, [maxHeight]);\n\n  // const useHeight = () => {\n  //   const [height, setHeight] = useState(maxHeight);\n\n  //   useEffect(() => {\n  //     const onResize = () =>\n  //       setHeight(document.querySelector(\"#chat_log_window\").offsetHeight);\n  //     window.addEventListener(\"resize\", onResize);\n  //     return () => window.removeEventListener(\"resize\", onResize);\n  //   }, []);\n\n  //   return height;\n  // };\n  // const height = useHeight();\n  return (\n    <div className=\"chat-content\">\n      <div className=\"chat-log-window\">\n        {!is_match ? (\n          <div className=\"flex-center\">\n            <ChatStart chatClose={chatclose} setWaiters={setWaiters} />\n            {chatlog}\n          </div>\n        ) : !group ? (\n          <div className=\"flex-center\">\n            <Spin\n              size=\"large\"\n              tip={\n                waiters ? (\n                  <div>내 앞의 대기자 수 : {waiters}</div>\n                ) : (\n                  <span>잠시후 매칭됩니다!</span>\n                )\n              }\n              style={{ color: \"white\" }}\n              indicator={<LoadingOutlined style={{ fontSize: 36 }} spin />}\n            />\n          </div>\n        ) : (\n          chatlog\n        )}\n      </div>\n      <div>\n        <Search\n          placeholder={\n            group ? \"메세지를 보내세요!\" : \"채팅시작 버튼을 클릭하세요!\"\n          }\n          enterButton={<SendOutlined />}\n          prefix={<MessageTwoTone />}\n          size=\"large\"\n          value={message}\n          disabled={!group}\n          allowClear={true}\n          maxLength=\"100\"\n          onChange={(e) => setMessage(e.target.value)}\n          onSearch={chat_submit}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useInterval } from \"utils/useInterval\";\nimport { useAppContext, setTotalUser } from \"store\";\nimport { Card } from \"antd\";\nimport { axiosInstance } from \"api\";\n\nexport function UserCount() {\n  const {\n    store: { total_user },\n    dispatch,\n  } = useAppContext();\n\n  const get_user_count = async () => {\n    try {\n      const response = await axiosInstance.get(\"/chat/users_count/\");\n      dispatch(setTotalUser(response.data.count));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useInterval(get_user_count, 5000);\n\n  return (\n    <Card\n      title={<div style={{ textAlign: \"center\" }}>지금 몇명?</div>}\n      bordered={true}\n    >\n      <h1 style={{ textAlign: \"center\", color: \"#43d5d2\" }}>{total_user}</h1>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport \"./appLayout.scss\";\nimport Logo from \"assets/flexchatlogo.png\";\n\nexport function AppLayout({ children, right_sidebar, user_info }) {\n  return (\n    <div className=\"app\">\n      <div className=\"header\">\n        <div className=\"logo\">\n          <img src={Logo} alt=\"Flex 주사위 Chat\" />\n        </div>\n        <div className=\"topnav\">{user_info}</div>\n      </div>\n      <div className=\"contents\">{children}</div>\n      <div className=\"left-sidebar\"></div>\n      <div className=\"right-sidebar\">{right_sidebar}</div>\n      <div className=\"footer\">&copy; 2020. flexchat</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { StopOutlined } from \"@ant-design/icons\";\nimport { useAppContext } from \"store\";\n\nexport function ChatStop({ chatSocket }) {\n  const {\n    store: { group },\n  } = useAppContext();\n  const chatClose = () => {\n    if (chatSocket.close) {\n      chatSocket.close();\n    } else {\n      return null;\n    }\n  };\n  return (\n    <div>\n      {group ? (\n        <Button\n          type=\"danger\"\n          danger\n          block\n          shape=\"round\"\n          icon={<StopOutlined />}\n          size=\"large\"\n          onClick={chatClose}\n          style={{ marginTop: \"10px\" }}\n        >\n          채팅 그만하기\n        </Button>\n      ) : null}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Radio, Drawer, Button, notification } from \"antd\";\nimport { useAppContext } from \"store\";\nimport { setToken } from \"store\";\nimport {\n  SettingFilled,\n  ManOutlined,\n  WomanOutlined,\n  TeamOutlined,\n  SettingOutlined,\n  CheckCircleOutlined,\n} from \"@ant-design/icons\";\nimport { setIsMatch } from \"store\";\nimport { setIsLogin } from \"store\";\nimport { axiosInstance } from \"api\";\n\nexport function UserInfo({ signal }) {\n  const {\n    store: { jwtToken, is_login },\n    dispatch,\n  } = useAppContext();\n  const [userInfo, setUserInfo] = useState({ gender: \"\", want_match: \"\" });\n  const [visible, setVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const userSubmit = async () => {\n    try {\n      setLoading(true);\n      if (userInfo.pk) {\n        dispatch(setIsMatch(false));\n        const headers = { Authorization: `JWT ${jwtToken}` };\n        const response = await axiosInstance.put(\n          `/accounts/users/${userInfo.pk}/`,\n          { ...userInfo },\n          { headers }\n        );\n        setUserInfo(response.data);\n        setLoading(false);\n        onDrawerClose();\n      } else {\n        const response = await axiosInstance.post(\"/accounts/users/\", {\n          ...userInfo,\n        });\n        setUserInfo(response.data);\n        dispatch(setToken(response.data.token, response.data.pk));\n        setLoading(false);\n        onDrawerClose();\n        dispatch(setIsLogin(true));\n      }\n\n      notification.open({\n        message: \"성공적으로 저장되었습니다.\",\n        description: \"이제 채팅을 시작할 수 있습니다!\",\n        icon: <CheckCircleOutlined style={{ color: \"green\" }} />,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onDrawerClose = () => {\n    setVisible(false);\n  };\n\n  useEffect(() => {\n    if (!is_login) {\n      showDrawer();\n      dispatch(setIsLogin(true));\n    }\n  }, [is_login, dispatch]);\n\n  return (\n    <div>\n      <>\n        {jwtToken ? (\n          <SettingFilled\n            onClick={showDrawer}\n            style={{ fontSize: \"40px\", color: \"#43d5d2\" }}\n          />\n        ) : (\n          <SettingOutlined\n            onClick={showDrawer}\n            style={{ fontSize: \"40px\", color: \"#43d5d2\" }}\n          />\n        )}\n        <Drawer\n          //   mask={false}\n          maskStyle={{\n            backgroundColor: \"transparent\",\n          }}\n          //   title=\"SETTING\"\n          placement=\"left\"\n          closable={true}\n          onClose={onDrawerClose}\n          visible={visible}\n          style={{\n            boxShadow: \"0 8px 16px 0 rgba(0, 0, 0, 1)\",\n          }}\n        >\n          <div>\n            <p style={{ marginBottom: 24, textAlign: \"center\" }}>\n              <SettingOutlined />\n              &nbsp;SETTING\n            </p>\n            <hr style={h1} />\n            <div\n              style={{\n                marginTop: \"30px\",\n                fontWeight: \"bold\",\n                fontSize: \"20px\",\n                color: \"skyblue\",\n              }}\n            >\n              저는\n            </div>\n            <div style={{ textAlign: \"center\" }}>\n              <Radio.Group\n                onChange={(e) =>\n                  setUserInfo((prev) => ({ ...prev, gender: e.target.value }))\n                }\n                buttonStyle=\"solid\"\n                size=\"large\"\n                style={{\n                  margin: \"10px 0 10px 0\",\n                  borderRadius: \"12px\",\n                }}\n              >\n                <Radio.Button style={Radio_Button} value=\"M\">\n                  <ManOutlined />\n                  &nbsp;남자\n                </Radio.Button>\n                <Radio.Button style={Radio_Button} value=\"F\">\n                  <WomanOutlined />\n                  &nbsp;여자\n                </Radio.Button>\n              </Radio.Group>\n            </div>\n            <div style={{ textAlign: \"right\", marginBottom: \"30px\" }}>\n              입니다.\n            </div>\n            <hr style={h1} />\n            <div\n              style={{\n                marginTop: \"30px\",\n                fontWeight: \"bold\",\n                fontSize: \"20px\",\n                color: \"hotpink\",\n              }}\n            >\n              상대방은 &nbsp;\n            </div>\n            <div style={{ textAlign: \"center\" }}>\n              <Radio.Group\n                onChange={(e) =>\n                  setUserInfo((prev) => ({\n                    ...prev,\n                    want_match: e.target.value,\n                  }))\n                }\n                buttonStyle=\"solid\"\n                style={{ margin: \"10px 0 10px 0\", borderRadius: \"12px\" }}\n                size=\"large\"\n              >\n                <Radio.Button style={Radio_Button} value=\"M\">\n                  <ManOutlined />\n                  &nbsp;남자\n                </Radio.Button>\n                <Radio.Button style={Radio_Button} value=\"F\">\n                  <WomanOutlined />\n                  &nbsp;여자\n                </Radio.Button>\n                <Radio.Button style={Radio_Button} value=\"A\">\n                  <TeamOutlined />\n                  &nbsp;아무나\n                </Radio.Button>\n              </Radio.Group>\n            </div>\n            <div style={{ textAlign: \"right\", marginBottom: \"30px\" }}>\n              가 좋겠어요.\n            </div>\n            <hr style={h1} />\n            <div\n              style={{\n                textAlign: \"center\",\n                marginTop: \"30px\",\n              }}\n            >\n              <Button\n                style={{\n                  borderRadius: \"8px\",\n                  boxShadow: \"0 2px 4px 0 gray\",\n                }}\n                block\n                type=\"primary\"\n                loading={loading}\n                disabled={!userInfo.gender || !userInfo.want_match}\n                size=\"large\"\n                onClick={userSubmit}\n              >\n                저장\n              </Button>\n            </div>\n          </div>\n        </Drawer>\n      </>\n    </div>\n  );\n}\n\nconst h1 = { borderTop: \"1px solid #eaeaea\" };\n\nconst Radio_Button = {\n  borderRadius: \"8px\",\n  border: \"2px solid #43d5d2\",\n  margin: \"3px 3px 0 3px\",\n  boxShadow: \"0 2px 3px 0 gray\",\n  //   color: \"dimgray\",\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Chat } from \"components/chat\";\nimport { UserCount } from \"components/userCount\";\nimport { AppLayout } from \"components/appLayout\";\nimport { useAppContext } from \"store\";\nimport { ChatStop } from \"components/chatStop\";\nimport { UserInfo } from \"components/userInfo\";\n\nfunction Home() {\n  const {\n    store: { jwtToken, group },\n  } = useAppContext();\n\n  const [chatSocket, setChatSocket] = useState({});\n  useEffect(() => {\n    if (jwtToken && group) {\n      const ws = new WebSocket(\n        `ws://dry-dawn-35150.herokuapp.com/ws/chat/?token=${jwtToken}`\n      );\n      setChatSocket(ws);\n    }\n  }, [jwtToken, group]);\n\n  const right_sidebar = (\n    <>\n      <UserCount />\n      <ChatStop chatSocket={chatSocket} />\n    </>\n  );\n\n  return (\n    <div>\n      <AppLayout right_sidebar={right_sidebar} user_info={<UserInfo />}>\n        <Chat chatSocket={chatSocket} setChatSocket={setChatSocket} />\n      </AppLayout>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Home from \"./home\";\nimport { Beforeunload } from \"react-beforeunload\";\nimport { useAppContext, deleteToken, deleteGroup } from \"store\";\n\nfunction Root() {\n  const {\n    store: { pk },\n    dispatch,\n  } = useAppContext();\n\n  const userDelete = async (pk) => {\n    dispatch(deleteToken());\n    dispatch(deleteGroup());\n    try {\n      navigator.sendBeacon(\n        `https://dry-dawn-35150.herokuapp.com/accounts/delete/${pk}/`\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <Beforeunload onBeforeunload={() => userDelete(pk)}>\n      <Route path=\"/\" component={Home} />\n    </Beforeunload>\n  );\n}\n\nexport default Root;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppProvider } from \"store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Root from \"pages\";\nimport \"antd/dist/antd.css\";\nimport \"main.css\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <AppProvider>\n      <Root />\n    </AppProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}